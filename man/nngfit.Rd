% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nonnegative_garrote.R
\name{nngfit}
\alias{nngfit}
\title{Fit a linear model with nonnegative garrote regularization}
\usage{
nngfit(
  x,
  y,
  standardize = FALSE,
  standardize.response = FALSE,
  criterion = c("cv", "aic", "bic"),
  lambda = NULL,
  nlambda = 100,
  initial.estimates = c("default", "ridge", "lasso"),
  nfolds = 10,
  foldid = NULL,
  type.measure = c("mse", "mae"),
  lambda.min.ratio = 1e-04,
  alpha = 1,
  sigma2 = NULL,
  lower.limits = 0,
  upper.limits = Inf,
  use_alasso_lambda = FALSE,
  ignore.gamma = FALSE,
  gamma = 1,
  betatypes = NULL
)
}
\arguments{
\item{x}{A standardized matrix of predictors of dimension nobs x nvars, where
each row is an observation vector.If not standardized, set standardize to TRUE.}

\item{y}{A numeric centered quantitative vector of response. If not centered,
set `standardize` to TRUE; this will standardize x but center y. See `standardize.response`
for more details.}

\item{standardize}{Specifies whether to standardize the predictors matrix
\code{`x`} to have mean 0 and unit variance. If set to TRUE, \code{`x`} will be
standardized. Additionally, the response variable \code{`y`} will be centered
by subtracting its mean. This standardization step can be useful to ensure
that the predictors are on a same scale. By default,
\code{standardize = FALSE}, indicating that no standardization will be performed.
This assumes that users have already standardized x and  y so that the intercept
is zero.}

\item{standardize.response}{Specifies whether the response variable y should be
standardized to have unit variance. This option divides \code{`y`} by its standard deviation.}

\item{criterion}{The criterion used to select tuning parameters for the
nonnegative garrote. Available options include: \code{criterion = "cv"}
which perform cross-validation to select the optimal tuning parameter, while
\code{criterion = "aic"} and \code{criterion = "bic"} select the tuning parameter
 based on the AIC and BIC, respectively.}

\item{lambda}{Optional user-supplied sequence of lambdas. The default is NULL, and
the program chooses its own sequence. If lambda is supplied, its length must be at least two.}

\item{nlambda}{An integer specifying the number of values of lambda
for both nonnegative garrote and initial estimators (ridge or lasso). The default is NULL,
which sets `nlambda` to 100.}

\item{initial.estimates}{Specifies the type of initial estimates to use for
constructing nonnegative garrote weights. The \code{initial.estimates = "default"}
option uses \code{"OLS"} estimates. Other options include
\code{initial.estimates ="ridge"} or \code{initial.estimates ="lasso"}
estimates, which are calculated using the user-supplied \code{`lambda.initial`.}}

\item{nfolds}{Number of folds for cross-validation. Default is 10. Smallest value allowable is
nfolds = 3.}

\item{foldid}{an optional vector of values between 1 and nfolds identifying
what fold each observation is in. If supplied, nfolds can be missing.}

\item{type.measure}{Loss function to use for cross-validation for both nonnegative garrote and
initial estimates (ridge or lasso) when not provided. Currently, two options are available. The
default option is \code{type.measure = "mse"}, which corresponds to squared error. Another
option is \code{type.measure = "mae"}, which corresponds to mean absolute error.}

\item{lambda.min.ratio}{Lambda can be provided if the user wants to specify
the lambda sequence, but the typical usage is for the program to construct the
lambda sequence on its own. When automatically generated, the lambda sequence
is determined by the ratio of lambda.max and lambda.min. The program generates nlambda values
on the log scale from lambda.max down to lambda.min. Lambda.max is not user-specified but is
computed from the input standardized x and y. It is the smallest value for lambda in which all
the estimated coefficients are zero. The default is `lambda.min.ratio = 0.0001`.}

\item{alpha}{The mixing parameter where alpha = 1 represents the usual nonnegative
garrote, while alpha = 0 represents the garrote with a ridge-like penalty.}

\item{sigma2}{The residual variance obtained by fitting the full OLS model without
any regularization or feature selection. It is used for the calculation of AIC and BIC.
To compute these metrics, the residual variance needs to be provided via the
`sigma2` parameter.}

\item{lower.limits}{Vector of lower limits for each shrinkage factor.
The default is 0, which will be replicated to have a length equal to the number of predictors, and
nonnegative shrinkage factors will be estimated.}

\item{upper.limits}{Vector of upper limits for the shrinkage factors. The default is Inf, and
unbounded shrinkage factors will be estimated.}

\item{use_alasso_lambda}{Specify whether the adaptive lasso sequence of lambdas should be used.
This depends on the value of `gamma` supplied. See `lambda_seq_alasso()`. Only calculated when
lambda = NULL}

\item{ignore.gamma}{see lambda_seq_alasso() for details}

\item{gamma}{adaptive lasso parameter used to calculate lambdas when use_alasso_lambda is set
to TRUE. Default is gamma = 1}

\item{betatypes}{Not used but added for consistency with the oracle_model().}
}
\value{
returns the following items:
\item{beta}{Shrunken regression estimates.}
\item{shrinkageFactors}{Shrinkage factors for each predictor.}
\item{lambda}{The tuning parameter used for estimation of parameters.}
\item{gamma}{Not applicable for garrote but returned for consistency with other methods like adaptive lasso.}
\item{x}{A standardized matrix of predictors used in fitting the linear model.}
\item{y}{A centered vector of the response variable used in fitting the linear model.}
}
\description{
Fits the nonnegative garrote model proposed by Breiman (1995) using the optimal
tuning parameter determined through cross-validation. It also supports the selection
of tuning parameters based on the Akaike Information Criterion (AIC) or the Bayesian Information
Criterion (BIC). The value of lambda that yields the smallest AIC or BIC is chosen as the best
tuning parameter.
}
